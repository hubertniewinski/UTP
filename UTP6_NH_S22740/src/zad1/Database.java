package zad1;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Database {
    String url;
    TravelData travelData;
    Connection con;
    DatabaseMetaData md;

    public Database(String url, TravelData travelData) {
        this.url = url;
        this.travelData = travelData;
    }

    public void create() {
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");

            con = DriverManager.getConnection(url);
            md = con.getMetaData();

            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet tableResultSet = md.getTables(null, null, "OFFERS", null);

            if(tableResultSet.next()){
                stmt.execute("drop table OFFERS");
            }
            stmt.execute(
                    "create table OFFERS (" +
                            "    ID integer not null generated by default as identity," +
                            "    CONTRACTOR_LOCALE varchar(255) not null," +
                            "    COUNTRY varchar(255) not null," +
                            "    DEPARTURE_DATE date not null," +
                            "    RETURN_DATE date not null," +
                            "    PLACE_KEY varchar(255) not null," +
                            "    PRICE double not null," +
                            "    CURRENCY varchar(255) not null," +
                            "    PRIMARY KEY(ID)" +
                            ")");
            int i=1;
            for (Offer offer : travelData.getOffers()) {
                PreparedStatement statement = con.prepareStatement(
                        "INSERT INTO OFFERS (ID, CONTRACTOR_LOCALE, COUNTRY, DEPARTURE_DATE, RETURN_DATE, PLACE_KEY, PRICE, CURRENCY) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");

                statement.setInt(1, i++);
                statement.setString(2, offer.getContractorLocale());
                statement.setString(3, offer.getCountry());
                statement.setDate(4, new Date(offer.getDepartureDate().getTime()));
                statement.setDate(5, new Date(offer.getReturnDate().getTime()));
                statement.setString(6, offer.getPlaceKey());
                statement.setDouble(7, offer.getPrice());
                statement.setString(8, offer.getCurrency());

                statement.executeUpdate();
                statement.close();
            }

            if (con != null) con.close();
        } catch (Exception exc)  {
            System.out.println(exc);
            System.exit(1);
        }
    }

    public void showGui() {
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");

            con = DriverManager.getConnection(url);
            md = con.getMetaData();

            Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("SELECT * FROM OFFERS");

            List<String> availableLanguages = new ArrayList<>();
            List<String> availableRegions = new ArrayList<>();
            List<OfferDatabaseModel> offers = new ArrayList<>();

            ResultSetMetaData md = rs.getMetaData();
            int cc =  md.getColumnCount();
            String[] columnNames = new String[cc];
            int[] columnTypes = new int[cc];
            for(int col = 0; col < cc; col++) {
                columnNames[col] = md.getColumnName(col+1);
                columnTypes[col] = md.getColumnType(col+1);
            }

            while (rs.next()) {
                String localization = rs.getString(2);
                String[] locale = localization.split("_");
                if (locale.length > 0 && !availableLanguages.contains(locale[0])) {
                    availableLanguages.add(locale[0]);
                }
                if (locale.length > 1 && !availableRegions.contains(locale[1])) {
                    availableRegions.add(locale[1]);
                }

                Integer id = rs.getInt(1);
                String contractorLocale = rs.getString(2);
                String country = rs.getString(3);
                java.util.Date departureDate = new java.util.Date(rs.getDate(4).getTime());
                java.util.Date returnDate = new java.util.Date(rs.getDate(5).getTime());
                String placeKey = rs.getString(6);
                double price = rs.getDouble(7);
                String currency = rs.getString(8);

                offers.add(new OfferDatabaseModel(id, contractorLocale, country, departureDate, returnDate, placeKey, price, currency));
            }

            rs.close();

            if (con != null) con.close();

            GUIBuilder guiDrawer = new GUIBuilder(availableLanguages, availableRegions);
            guiDrawer.addOffers(offers, columnNames);
        } catch (Exception exc)  {
            System.out.println(exc);
            System.exit(1);
        }
    }
}
